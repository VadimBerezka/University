-- table
CREATE TABLE #TR_AUDIT (
    ID        INT IDENTITY,
    STMT      VARCHAR(20) check (STMT in ('INS','DEL','UPD')) ,
    TRNAME    VARCHAR(50),
    CC        VARCHAR(300)
);
DROP TABLE #TR_AUDIT;
select * from #TR_AUDIT;
go

--1
CREATE TRIGGER TR_TEACHER_INS
ON TEACHER
AFTER INSERT
AS
BEGIN
    INSERT INTO #TR_AUDIT (STMT, TRNAME, CC)
    SELECT 
        'INS',
        'TR_TEACHER_INS',
        'TEACHER: ' + TEACHER_NAME
    FROM INSERTED;
END;

INSERT INTO TEACHER (TEACHER, TEACHER_NAME, GENDER, PULPIT)
VALUES ('»¬¿ÕŒ¬¿', '»‚‡ÌÓ‚‡ ≈ÎÂÌ‡ œÂÚÓ‚Ì‡', 'Ê', '»—Ë“');
DELETE FROM TEACHER WHERE TEACHER = '»¬¿ÕŒ¬¿';
SELECT * FROM #TR_AUDIT;
SELECT * FROM TEACHER;
go

--2
CREATE TRIGGER TR_TEACHER_DEL
ON TEACHER
AFTER DELETE
AS
BEGIN
    INSERT INTO #TR_AUDIT (STMT, TRNAME, CC)
    SELECT 
        'DEL',
        'TR_TEACHER_DEL',
        'TEACHER: ' + TEACHER_NAME
    FROM DELETED;
END;

DELETE FROM TEACHER WHERE TEACHER = '—ÃÀ¬';
INSERT INTO TEACHER (TEACHER, TEACHER_NAME, GENDER, PULPIT)
VALUES ('—ÃÀ¬', '—ÏÂÎÓ‚ ¬Î‡‰ËÏË ¬Î‡‰ËÒÎ‡‚Ó‚Ë˜', 'Ï', '»—Ë“');
SELECT * FROM #TR_AUDIT;
SELECT * FROM TEACHER;
go

--3
CREATE TRIGGER TR_TEACHER_UPD
ON TEACHER
AFTER UPDATE
AS
BEGIN
    INSERT INTO #TR_AUDIT (STMT, TRNAME, CC)
    SELECT 
        'UPD',
        'TR_TEACHER_UPD',
        'BEFORE: TEACHER: ' + d.TEACHER_NAME + 
        ' AFTER: TEACHER: ' + i.TEACHER_NAME
    FROM DELETED d
    INNER JOIN INSERTED i ON d.TEACHER = i.TEACHER;
END;

UPDATE TEACHER
SET TEACHER_NAME = '—ÏÂÎÓ‚'
WHERE TEACHER = '—ÃÀ¬';
SELECT * FROM #TR_AUDIT;
go

--4
CREATE TRIGGER TR_TEACHER
ON TEACHER
AFTER INSERT, DELETE, UPDATE
AS
BEGIN
    IF EXISTS (SELECT * FROM INSERTED) AND NOT EXISTS (SELECT * FROM DELETED)
    BEGIN
        INSERT INTO #TR_AUDIT (STMT, TRNAME, CC)
        SELECT 
            'INS',
            'TR_TEACHER',
            'INSERTED: TEACHER: ' + TEACHER_NAME
        FROM INSERTED;
    END

    IF EXISTS (SELECT * FROM DELETED) AND NOT EXISTS (SELECT * FROM INSERTED)
    BEGIN
        INSERT INTO #TR_AUDIT (STMT, TRNAME, CC)
        SELECT 
            'DEL',
            'TR_TEACHER',
            'DELETED: TEACHER: ' + TEACHER_NAME
        FROM DELETED;
    END

    IF EXISTS (SELECT * FROM INSERTED) AND EXISTS (SELECT * FROM DELETED)
    BEGIN
        INSERT INTO #TR_AUDIT (STMT, TRNAME, CC)
        SELECT 
            'UPD',
            'TR_TEACHER',
            'BEFORE: TEACHER: ' + d.TEACHER_NAME +
            ' AFTER: TEACHER: ' + i.TEACHER_NAME
        FROM DELETED d
        INNER JOIN INSERTED i ON d.TEACHER = i.TEACHER;
    END
END;

INSERT INTO TEACHER (TEACHER, TEACHER_NAME, GENDER, PULPIT)
VALUES ('»¬¿ÕŒ¬', '»‚‡ÌÓ‚ ¿ÎÂÍÒÂÈ ¬ËÍÚÓÓ‚Ë˜', 'Ï', '»—Ë“');

UPDATE TEACHER
SET TEACHER_NAME = '»‚‡ÌÓ‚'
WHERE TEACHER = '»¬¿ÕŒ¬';

DELETE FROM TEACHER
WHERE TEACHER = '»¬¿ÕŒ¬';

SELECT * FROM #TR_AUDIT;
SELECT * FROM TEACHER;
go 

DROP TRIGGER IF EXISTS TR_TEACHER_INS;
DROP TRIGGER IF EXISTS TR_TEACHER_DEL;
DROP TRIGGER IF EXISTS TR_TEACHER_UPD;
DROP TRIGGER IF EXISTS TR_TEACHER;
go

--5
INSERT INTO STUDENT (IDSTUDENT, IDGROUP, NAME, BDAY)
VALUES (1100, 999, '»‚‡ÌÓ‚ »‚‡Ì »‚‡ÌÓ‚Ë˜', '1990-01-01');
SELECT * FROM STUDENT;
go
 
--6
CREATE TRIGGER TR_TEACHERS_DEL1 ON TEACHER AFTER DELETE
AS
BEGIN
  DECLARE @A1 CHAR(10) = '',
          @A2 VARCHAR(100) = '',
          @A3 CHAR(1) = '',
          @A4 CHAR(20) = '',
          @IN VARCHAR(300) = '';
  SET @A1 = (SELECT [TEACHER] FROM DELETED);
  SET @A2 = (SELECT [TEACHER_NAME] FROM DELETED);
  SET @A3 = (SELECT [GENDER] FROM DELETED);
  SET @A4 = (SELECT [PULPIT] FROM DELETED);
  SET @IN = CONCAT(TRIM(@A1), ' ', @A2, ' ', @A3, ' ', @A4);
  INSERT INTO #TR_AUDIT(STMT, TRNAME, CC)
        VALUES('DEL', 'TR_TEACHERS_DEL1', @IN);
  RETURN;
END;

CREATE TRIGGER TR_TEACHERS_DEL2 ON TEACHER AFTER DELETE
AS
BEGIN
  DECLARE @A1 CHAR(10) = '',
          @A2 VARCHAR(100) = '',
          @A3 CHAR(1) = '',
          @A4 CHAR(20) = '',
          @IN VARCHAR(300) = '';
  SET @A1 = (SELECT [TEACHER] FROM DELETED);
  SET @A2 = (SELECT [TEACHER_NAME] FROM DELETED);
  SET @A3 = (SELECT [GENDER] FROM DELETED);
  SET @A4 = (SELECT [PULPIT] FROM DELETED);
  SET @IN = CONCAT(TRIM(@A1), ' ', @A2, ' ', @A3, ' ', @A4);
  INSERT INTO #TR_AUDIT(STMT, TRNAME, CC)
        VALUES('DEL', 'TR_TEACHERS_DEL2', @IN);
  RETURN;
END;

CREATE TRIGGER TR_TEACHERS_DEL3 ON TEACHER AFTER DELETE
AS
BEGIN
  DECLARE @A1 CHAR(10) = '',
          @A2 VARCHAR(100) = '',
          @A3 CHAR(1) = '',
          @A4 CHAR(20) = '',
          @IN VARCHAR(300) = '';
  SET @A1 = (SELECT [TEACHER] FROM DELETED);
  SET @A2 = (SELECT [TEACHER_NAME] FROM DELETED);
  SET @A3 = (SELECT [GENDER] FROM DELETED);
  SET @A4 = (SELECT [PULPIT] FROM DELETED);
  SET @IN = CONCAT(TRIM(@A1), ' ', @A2, ' ', @A3, ' ', @A4);
  INSERT INTO #TR_AUDIT(STMT, TRNAME, CC)
        VALUES('DEL', 'TR_TEACHERS_DEL3', @IN);
  RETURN;
END;

SELECT T.NAME, E.TYPE_DESC
  FROM SYS.TRIGGERS T JOIN SYS.TRIGGER_EVENTS E
    ON T.OBJECT_ID = E.OBJECT_ID
    WHERE OBJECT_NAME(T.PARENT_ID) = 'TEACHER' AND E.TYPE_DESC = 'DELETE';

EXEC SP_SETTRIGGERORDER @TRIGGERNAME = 'TR_TEACHERS_DEL3', @ORDER = 'FIRST', @STMTTYPE = 'DELETE';
EXEC SP_SETTRIGGERORDER @TRIGGERNAME = 'TR_TEACHERS_DEL2', @ORDER = 'LAST', @STMTTYPE = 'DELETE';

INSERT INTO TEACHER(GENDER, PULPIT, TEACHER, TEACHER_NAME)
      VALUES('Ã', '»—Ë“', '¡Àƒ', '¡≈ÀŒƒ≈ƒ Õ» ŒÀ¿… »¬¿ÕŒ¬»◊');
DELETE TEACHER WHERE TEACHER = '¡Àƒ';
SELECT * FROM #TR_AUDIT;
DROP TRIGGER TR_TEACHERS_DEL3, TR_TEACHERS_DEL2, TR_TEACHERS_DEL1;
GO

--7
CREATE TRIGGER AT_TRIG ON AUDITORIUM_TYPE AFTER INSERT, DELETE, UPDATE
AS
BEGIN
  DECLARE @COUNT INT = (SELECT COUNT(*) FROM AUDITORIUM_TYPE);
  IF(@COUNT >= 5)
  BEGIN
    RAISERROR('Œ¡Ÿ≈≈  ŒÀ-¬Œ —“–Œ  Õ≈ ÃŒ∆≈“ ¡€“‹ > 5!', 11 , 1);
    ROLLBACK;
  END;
  RETURN;
END;

BEGIN TRAN
	INSERT AUDITORIUM_TYPE
	VALUES('1', '2');
COMMIT;

SELECT * FROM AUDITORIUM_TYPE;

DELETE AUDITORIUM_TYPE WHERE AUDITORIUM_TYPE.AUDITORIUM_TYPE LIKE '1';

DROP TRIGGER AT_TRIG;
GO

--8
CREATE TRIGGER FACULTY_TRIG ON FACULTY INSTEAD OF DELETE
AS
BEGIN
  RAISERROR('”ƒ¿À≈Õ»≈ —“–Œ  «¿œ–≈Ÿ≈ÕŒ!', 18, 1);
  RETURN;
END;

DELETE FACULTY;
SELECT * FROM FACULTY;

DROP TRIGGER FACULTY_TRIG;
GO

--9
CREATE TRIGGER DDL_UNIVER ON DATABASE FOR DDL_DATABASE_LEVEL_EVENTS
AS 
BEGIN
  DECLARE @T  VARCHAR(50) = EVENTDATA().value('(/EVENT_INSTANCE/EventType)[1]', 'VARCHAR(50)');
  DECLARE @T1  VARCHAR(50) = EVENTDATA().value('(/EVENT_INSTANCE/ObjectName)[1]', 'VARCHAR(50)');
  DECLARE @T2 VARCHAR(50) = EVENTDATA().value('(/EVENT_INSTANCE/ObjectType)[1]', 'VARCHAR(50)');

  IF(@T != 'ALTER_TABLE')
  BEGIN
    PRINT('“»œ —Œ¡€“»ﬂ: ' + @T);
    PRINT('»Ãﬂ Œ¡⁄≈ “¿: ' + @T1);
    PRINT('“»œ Œ¡⁄≈ “¿: ' + @T2);
    RAISERROR('Œœ≈–¿÷»» — UNIVER «¿œ–≈Ÿ≈Õ€', 18, 1);
  END;
  RETURN;
END;

CREATE TABLE TestTable (ID INT);
DROP TABLE TestTable;

DROP TRIGGER DDL_UNIVER ON DATABASE;